{"ast":null,"code":"var _jsxFileName = \"/Users/michaelnisnevich/Desktop/toDoList/first/src/App.tsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectUsers, selectUsersCount } from 'store/selectors';\nimport { createUser, plusUserCount } from 'store/actions';\nimport { v1 } from 'uuid';\nimport { CustomButton, UsersCountValue } from 'components';\nimport { UsersList } from 'components/UsersList';\nimport { generateRandomName } from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DELAY = 500;\nexport const App = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  debugger;\n  const dispatch = useDispatch();\n  const users = useSelector(selectUsers);\n  const usersCount = useSelector(selectUsersCount);\n  const [isAddNewUser, setIsAddNewUser] = useState(false);\n\n  const handleClick = _s(useCallback(_s(() => {\n    _s();\n\n    //void\n    dispatch(createUser({\n      id: v1(),\n      name: generateRandomName()\n    }));\n    dispatch(plusUserCount());\n    setIsAddNewUser(true);\n    useEffect(() => {\n      let timeoutId = setTimeout(() => {\n        //void\n        setIsAddNewUser(false);\n      }, DELAY);\n      return () => {\n        clearTimeout(timeoutId);\n      };\n    }, []);\n  }, \"OD7bBpZva5O2jO+Puf00hKivP7c=\"), [dispatch]), \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  return (\n    /*#__PURE__*/\n    //<Fragment>\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(UsersCountValue, {\n        usersCount: usersCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n        title: \"Click Me\",\n        isButtonDisabled: isAddNewUser,\n        onClick: handleClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(UsersList, {\n        users: users\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)\n  );\n};\n/*useEffect(() => {\nif (users.length > 0 && isAddNewUser) {\ndispatch(plusUserCount());\n}\n}, [dispatch, users.length, isAddNewUser]);*/\n\n/*\nuseEffect(() => {\n\n    let timeoutId: SetTimeoutType = setTimeout(() => { //void\n        setIsAddNewUser(true);\n    }, DELAY);\n\n    return () => {\n        clearTimeout(timeoutId)\n        setIsAddNewUser(false)\n    };\n}, [DELAY]);*/\n\n_s2(App, \"VBz0O0JS3z5+fl7+AFfeXplFsTI=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/michaelnisnevich/Desktop/toDoList/first/src/App.tsx"],"names":["React","useCallback","useEffect","useState","useDispatch","useSelector","selectUsers","selectUsersCount","createUser","plusUserCount","v1","CustomButton","UsersCountValue","UsersList","generateRandomName","DELAY","App","dispatch","users","usersCount","isAddNewUser","setIsAddNewUser","handleClick","id","name","timeoutId","setTimeout","clearTimeout"],"mappings":";;;AAAA,OAAOA,KAAP,IAAyBC,WAAzB,EAAsCC,SAAtC,EAAiDC,QAAjD,QAAgE,OAAhE;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,WAAR,EAAqBC,gBAArB,QAA4C,iBAA5C;AACA,SAAQC,UAAR,EAAoBC,aAApB,QAAwC,eAAxC;AACA,SAAQC,EAAR,QAAiB,MAAjB;AACA,SAAQC,YAAR,EAAsBC,eAAtB,QAA4C,YAA5C;AACA,SAAQC,SAAR,QAAwB,sBAAxB;AACA,SAAQC,kBAAR,QAAiC,OAAjC;;AAIA,MAAMC,KAAK,GAAG,GAAd;AAEA,OAAO,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAAA;;AACrB;AACA,QAAMC,QAAQ,GAAGb,WAAW,EAA5B;AAEA,QAAMc,KAAK,GAAGb,WAAW,CAA4BC,WAA5B,CAAzB;AACA,QAAMa,UAAU,GAAGd,WAAW,CAAwBE,gBAAxB,CAA9B;AAEA,QAAM,CAACa,YAAD,EAAeC,eAAf,IAAkClB,QAAQ,CAAU,KAAV,CAAhD;;AAEA,QAAMmB,WAAW,MAAGrB,WAAW,IAAC,MAAM;AAAA;;AAAE;AAEpCgB,IAAAA,QAAQ,CAACT,UAAU,CAAC;AAACe,MAAAA,EAAE,EAAEb,EAAE,EAAP;AAAWc,MAAAA,IAAI,EAAEV,kBAAkB;AAAnC,KAAD,CAAX,CAAR;AACAG,IAAAA,QAAQ,CAACR,aAAa,EAAd,CAAR;AAEAY,IAAAA,eAAe,CAAC,IAAD,CAAf;AAEAnB,IAAAA,SAAS,CAAC,MAAM;AAEZ,UAAIuB,SAAS,GAAGC,UAAU,CAAC,MAAM;AAAE;AAC/BL,QAAAA,eAAe,CAAC,KAAD,CAAf;AACH,OAFyB,EAEvBN,KAFuB,CAA1B;AAIA,aAAO,MAAM;AACTY,QAAAA,YAAY,CAACF,SAAD,CAAZ;AACH,OAFD;AAIH,KAVQ,EAUN,EAVM,CAAT;AAYH,GAnB8B,mCAmB5B,CAACR,QAAD,CAnB4B,CAAd,iCAAjB;;AAqBA;AAAA;AACI;AACA;AAAA,8BACI,QAAC,eAAD;AAAiB,QAAA,UAAU,EAAEE;AAA7B;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI,QAAC,YAAD;AACI,QAAA,KAAK,EAAC,UADV;AAEI,QAAA,gBAAgB,EAAEC,YAFtB;AAGI,QAAA,OAAO,EAAEE;AAHb;AAAA;AAAA;AAAA;AAAA,cAHJ,eASI,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEJ;AAAlB;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAcH,CA5CM;AA+CP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAhEaF,G;UAEQZ,W,EAEHC,W,EACKA,W;;;KALVW,G","sourcesContent":["import React, {Fragment, useCallback, useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {selectUsers, selectUsersCount} from 'store/selectors';\nimport {createUser, plusUserCount} from 'store/actions';\nimport {v1} from 'uuid';\nimport {CustomButton, UsersCountValue} from 'components';\nimport {UsersList} from 'components/UsersList';\nimport {generateRandomName} from 'utils';\nimport {SetTimeoutType, UserType} from 'types';\nimport {RootStoreType} from \"./store\";\n\nconst DELAY = 500;\n\nexport const App = () => {\n    debugger\n    const dispatch = useDispatch();\n\n    const users = useSelector<RootStoreType, UserType[]>(selectUsers);\n    const usersCount = useSelector<RootStoreType, number>(selectUsersCount);\n\n    const [isAddNewUser, setIsAddNewUser] = useState<boolean>(false);\n\n    const handleClick = useCallback(() => { //void\n\n        dispatch(createUser({id: v1(), name: generateRandomName()}));\n        dispatch(plusUserCount());\n\n        setIsAddNewUser(true);\n\n        useEffect(() => {\n\n            let timeoutId = setTimeout(() => { //void\n                setIsAddNewUser(false);\n            }, DELAY);\n\n            return () => {\n                clearTimeout(timeoutId)\n            };\n\n        }, []);\n\n    }, [dispatch]);\n\n    return (\n        //<Fragment>\n        <div>\n            <UsersCountValue usersCount={usersCount}/>\n\n            <CustomButton\n                title=\"Click Me\"\n                isButtonDisabled={isAddNewUser}\n                onClick={handleClick}\n            />\n\n            <UsersList users={users}/>\n        </div>\n    );\n};\n\n\n/*useEffect(() => {\nif (users.length > 0 && isAddNewUser) {\ndispatch(plusUserCount());\n}\n}, [dispatch, users.length, isAddNewUser]);*/\n\n/*\nuseEffect(() => {\n\n    let timeoutId: SetTimeoutType = setTimeout(() => { //void\n        setIsAddNewUser(true);\n    }, DELAY);\n\n    return () => {\n        clearTimeout(timeoutId)\n        setIsAddNewUser(false)\n    };\n}, [DELAY]);*/\n"]},"metadata":{},"sourceType":"module"}